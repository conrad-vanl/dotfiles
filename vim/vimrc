set nocompatible
filetype off

" ----- Vundle ----- "

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'

" ----- Bundles ----- "

Bundle 'mileszs/ack.vim'
Bundle 'kien/ctrlp.vim'
Bundle 'scrooloose/nerdcommenter'
Bundle 'scrooloose/nerdtree'
Bundle 'msanders/snipmate.vim'
Bundle 'scrooloose/syntastic'
Bundle 'Townk/vim-autoclose'
Bundle 'kchmck/vim-coffee-script'
Bundle 'altercation/vim-colors-solarized'
Bundle 'tpope/vim-dispatch'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'tpope/vim-fugitive'
Bundle 'airblade/vim-gitgutter'
Bundle 'tpope/vim-haml'
Bundle 'nathanaelkane/vim-indent-guides'
Bundle 'terryma/vim-multiple-cursors'
Bundle 'tpope/vim-rails'
Bundle 'tpope/vim-surround'
Bundle 'mattn/zencoding-vim'

" ----- Powerline ----- "

set rtp+=/Users/Drew/Library/Python/2.7/lib/python/site-packages/powerline/bindings/vim

" ----- General Configuration ----- "

if (&t_Co > 2 || has("gui_running")) && !exists("syntax_on")
  syntax on
endif

filetype plugin indent on

set number
set nowrap
set linebreak
set ruler
set cursorline
set mousehide
set visualbell
set autoread
set ttyfast
set showmatch
set noshowmode
set mouse=a
set backspace=indent,eol,start
set laststatus=2
set scrolloff=8
set foldcolumn=1

" http://vim.wikia.com/wiki/Make_Vim_completion_popup_menu_work_just_like_in_an_IDE
set wildmenu
set wildmode=list:longest
set completeopt=longest,menuone

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

" No swap files
set nobackup
set nowritebackup
set noswapfile    " http://robots.thoughtbot.com/post/18739402579/global-gitignore#comment-458413287
set history=50

" ---- Indentation ----- "

set autoindent
set smartindent
set smarttab

" Softtabs, 2 spaces
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

" Display extra whitespace
set list listchars=tab:»·,trail:·

" ----- Search ----- "

set cursorline
set nohlsearch
set incsearch
set ignorecase
set smartcase

" ----- Syntax Highlighting & Theme ----- "

set synmaxcol=2048
set t_Co=256
let g:solarized_termtrans = 1
set background=light
colorscheme solarized

" ----- Mappings ----- "

let mapleader = ","

nmap <space> :

imap jj <esc>

" Remap window navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Open split and make active
nnoremap <leader>v <C-w>v<C-w>l
nnoremap <leader>h <C-w>s<C-w>j

" Trim trailing whitespace
nnoremap <leader>s :%s/\s\+$//<cr>:let @/=''<CR>

" Open .vimrc
nnoremap <leader>rc :e $MYVIMRC<cr>

" Open up Dropbox notes.txt file
map <Leader>ns :sp ~/Dropbox/Notes/scratch.txt<cr>
" Open up Dropbox notes directory
map <Leader>no :e ~/Dropbox/Notes/<CR>
" Open or create Dropbox notes file
map <Leader>nc :sp ~/Dropbox/Notes/

" Open a new tab and search for something
nmap <leader>a :Ack! ""<Left>
" Search for word under cursor
nmap <leader>A :Ack! <C-r><C-w><CR>

" CtrlP
nmap <C-b> :CtrlPBuffer<CR>

" NERDTree toggle
nmap <leader>nt :NERDTreeToggle<CR>
map <leader>nb :NERDTreeFromBookmark

" ----- Filetypes ----- "

autocmd Filetype gitcommit setlocal spell textwidth=72
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd Filetype gitcommit setlocal spell textwidth=72
autocmd! FileType mkd setlocal syn=off

" ----- Plugin-specific ----- "

" CtrlP
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
set wildignore+=*/tmp/*,*/log/*,*.so,*.swp,*.zip

" NERDTree
let g:NERDTreeWinSize = 50
let NERDTreeShowHidden=1

" EasyMotion
let g:EasyMotion_leader_key = '<Leader>'

" Ack
let g:ackprg = 'ag --nogroup --nocolor --column'

" GitGutter
let g:gitgutter_eager = 0

" ----- Reload vim on save ----- "

if has("autocmd")
  augroup myvimrchooks
    au!
    autocmd bufwritepost .vimrc source ~/.vimrc
  augroup END
endif
