## -------------------------------------
##   Functions - MVCSS
## -------------------------------------

## ----- Download ZIP ----- ##
## Extract external ZIP archive (via John D. Jameson)
##
## $1 - the ZIP URL
##
## Usage: `dlz http://www.example.com/example.zip`
##

function dlz() {
  curl -s -L -o .tempzip "$1"
  unzip -q .tempzip
  rm .tempzip
}

## ----- Get Curl Response ----- ##
## Get an HTTP status code from a curl
##
## $1 - the URL to the file
##
## Usage: `get_curl_response http://www.example.com/file.html`
##

function get_curl_response() {
  curl -s -I $1 | grep HTTP/1.1
}

## ----- MVCSS ----- ##
## Pull down the MVCSS files/project from the GitHub repo
##
## Usage: `mvcss all`, `mvcss components grid`, `mvcss copy components grid`
##

# Variables
LOADMSG='Getting that thang...'
MVCSSURL='https://raw.githubusercontent.com/mvcss/mvcss/master'
MVCSSLIBURL='https://raw.githubusercontent.com/mvcss/library/master'

# MVCSS
function mvcss() {
  if [ "$1" == 'all' ]
  then
    echo "$LOADMSG"
    dlz https://github.com/mvcss/mvcss/archive/master.zip
    echo "Downloaded MVCSS Zip file to `pwd`!"
  elif [ "$1" == 'copy' ]
  then
    echo "$LOADMSG"
    if [ "$3" == 'reset' ]
    then
      local RESPONSE=$(get_curl_response "$MVCSSURL"/"$2"/_"$3".scss)
    else
      local RESPONSE=$(get_curl_response "$MVCSSURL"/"$2"/_"$3".sass)
    fi
    if [[ $RESPONSE =~ .*404.*  ]]
    then
      echo "Sorry, $2/$3 not found."
    else
      if [ "$3" == 'reset' ]
      then
        curl -s "$MVCSSURL"/"$2"/_"$3".scss | pbcopy
        echo "Copied $2/$3 to the clipboard!"
      else
        curl -s "$MVCSSURL"/"$2"/_"$3".sass | pbcopy
        echo "Copied $2/$3 to the clipboard!"
      fi
    fi
  else
    echo "$LOADMSG"
    if [ "$2" == 'reset' ]
    then
      local RESPONSE=$(get_curl_response "$MVCSSURL"/"$1"/_"$2".scss)
    else
      local RESPONSE=$(get_curl_response "$MVCSSURL"/"$1"/_"$2".sass)
    fi
    if [[ $RESPONSE =~ .*404.*  ]]
    then
      echo "Sorry, $1/$2 not found."
    else
      if [ "$2" == 'reset' ]
      then
        curl -O -s "$MVCSSURL"/"$1"/_"$2".scss
        echo "Downloaded $1/$2 to `pwd`!"
      else
        curl -O -s "$MVCSSURL"/"$1"/_"$2".sass
        echo "Downloaded $1/$2 to `pwd`!"
      fi
    fi
  fi
}

# MVCSS Library
## Pull down the MVCSS Library files from the GitHub repo
##
## Usage: `mvcss-library components list`, `mvcss_library copy components list`
##
function mvcss-library() {
  if [ "$1" == 'copy' ]
  then
    echo "$LOADMSG"
    local RESPONSE=$(get_curl_response "$MVCSSLIBURL"/"$2"/_"$3".sass)
    if [[ $RESPONSE =~ .*404.*  ]]
    then
      echo "Sorry, $2/$3 not found."
    else
      curl -s "$MVCSSLIBURL"/"$2"/_"$3".sass | pbcopy
      echo "Copied $2/$3 to the clipboard!"
    fi
  else
    echo "$LOADMSG"
    local RESPONSE=$(get_curl_response "$MVCSSLIBURL"/"$1"/_"$2".sass)
    if [[ $RESPONSE =~ .*404.*  ]]
    then
      echo "Sorry, $1/$2 not found."
    else
      curl -O -s "$MVCSSLIBURL"/"$1"/_"$2".sass
      echo "Downloaded $1/$2 to `pwd`!"
    fi
  fi
}

## ----- MVCSS Starter ----- ##
## Creates an MVCSS starter application using drewbarontini/baseman
##
## $1 - The repo name
##
## Usage: `mvcss_starter sandbox`
##
function mvcss-starter() {
  local BASEMANURL='git@github.com:drewbarontini/baseman.git'

  echo
  echo "=============================================================="
  echo "================ MVCSS Starter Project ======================="
  echo "=============================================================="
  echo

  echo "--------------------------------------------------------------"
  echo "-- Cloning drewbarontini/baseman..."
  echo "--------------------------------------------------------------"
  echo

  git clone $BASEMANURL $1
  cd $1
  cd source/assets/stylesheets

  echo
  echo "--------------------------------------------------------------"
  echo "-- Downloading MVCSS..."
  echo "--------------------------------------------------------------"
  echo

  mvcss all
  mv mvcss-master/application.sass application.sass
  mv mvcss-master/foundation foundation
  mv mvcss-master/components components
  mv mvcss-master/structures structures
  rm -rf mvcss-master

  cd ../../../

  echo
  echo "--------------------------------------------------------------"
  echo "-- Bundling..."
  echo "--------------------------------------------------------------"
  echo

  gem install bundler
  bundle install --binstubs

  echo
  echo "--------------------------------------------------------------"
  echo "-- Starting the Middleman server..."
  echo "--------------------------------------------------------------"
  echo

  bundle exec middleman s
}

## ----- Get MVCSS Sass Build ----- ##
## Pulls down and concatenates MVCSS Sass files
##
## Usage: `get_mvcss_sass_build`
##
function get_mvcss_sass_build() {
  local MVCSSURL='https://raw.githubusercontent.com/mvcss/mvcss/master'
  touch build.sass
  echo "Created 'build' directory."
  echo "Getting Foundation files..."
  curl -s "$MVCSSURL"/foundation/_helpers.sass >> build.sass
  curl -s "$MVCSSURL"/foundation/_config.sass >> build.sass
  curl -s "$MVCSSURL"/foundation/_base.sass >> build.sass
  echo "Getting Component files..."
  curl -s "$MVCSSURL"/components/_bucket.sass >> build.sass
  curl -s "$MVCSSURL"/components/_card.sass >> build.sass
  curl -s "$MVCSSURL"/components/_grid.sass >> build.sass
  curl -s "$MVCSSURL"/components/_row.sass >> build.sass
  curl -s "$MVCSSURL"/components/_well.sass >> build.sass
  echo "Getting Tools file..."
  curl -s "$MVCSSURL"/foundation/_tools.sass >> build.sass
  cat build.sass | pbcopy
  echo "Created 'build.sass', copied to clipboard!"
}

## ----- Get MVCSS CSS Build ----- ##
## Pulls down and the MVCSS CSS build and copies to clipboard
##
## Usage: `get_mvcss_css_build`
##
function get_mvcss_css_build() {
  local MVCSSURL='https://raw.githubusercontent.com/mvcss/mvcss/master'
  if [[ "$1" == 'min' ]]
  then
    echo "Copying 'application.min.css' to the clipboard..."
    curl -s "$MVCSSURL"/_build/css/application.min.css | pbcopy
    echo "Copied!"
  else
    echo "Copying 'application.css' to the clipboard..."
    curl -s "$MVCSSURL"/_build/css/application.css | pbcopy
    echo "Copied!"
  fi
}

